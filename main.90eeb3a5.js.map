{"version":3,"sources":["src/Helper/CST.js","src/Scene/LoadScene.js","src/Helper/Extension.js","src/Scene/FirstScene.js","src/Scene/SecondScene.js","src/main.js"],"names":["CST","SCENE","LOAD_SCENE","FIRST_SCENE","SECOND_SCENE","IMAGES","BIG_BUTTON","BACK_BUTTON","CHARACTER_SKINS","LoadScene","key","pack","files","type","url","sceneKey","element","document","createElement","head","appendChild","sheet","styles","insertRule","load","script","image","WebFont","custom","families","scene","start","Phaser","Scene","Extention","button","time","tween","tweens","add","targets","duration","ease","scaleX","scaleY","yoyo","FirstScene","spine","text","game","renderer","width","fontFamily","fontSize","color","shadow","offsetX","offsetY","blur","boy","skin","skeletonData","findSkin","forEach","skinName","tempSkin","addSkin","setSkin","setSlotsToSetupPose","bigButton","nextButtonText","stroke","strokeThickness","nextButton","container","height","setSize","setInteractive","nextButtonTween","on","buttonClick","setScale","SecondScene","x","y","backButton","Game","AUTO","backgroundColor","parent","dom","createContainer","physics","default","arcade","debug","scale","mode","Scale","FIT","autoCenter","CENTER_BOTH"],"mappings":"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","file":"main.90eeb3a5.js","sourceRoot":"..","sourcesContent":["export const CST = {\r\n    SCENE: {\r\n        LOAD_SCENE: \"Load\",\r\n        FIRST_SCENE: \"FirstScene\",\r\n        SECOND_SCENE: \"SecondScene\"\r\n    },\r\n\r\n    IMAGES: {\r\n        BIG_BUTTON: \"Button_Big.png\",\r\n        BACK_BUTTON: \"BackButton.png\"\r\n    },\r\n    CHARACTER_SKINS: [\r\n        \"Boy\",\r\n        \"Hair/Hair_Main\",\r\n        \"Skin_Tone/Skin_1\",\r\n        \"Top/Tshirt_Pink\",\r\n        \"Shoes_Default\",\r\n        \"Bottom/Short_Blue\"\r\n    ]\r\n}\r\n\r\n","/** @type {import (\"../../typing/phaser\")} */\r\n/** @type {import (\"../../typing/SpinePlugin\")} */\r\n/** @type {import (\"../../typing/spine\")} */\r\n\r\nimport { CST } from \"../Helper/CST\";\r\n\r\nexport class LoadScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENE.LOAD_SCENE,\r\n            pack: {\r\n                files: [\r\n                    { type: 'scenePlugin', key: 'SpinePlugin', url: 'SpinePlugin.min.js', sceneKey: 'spine' }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    init() {\r\n        //  Inject our CSS\r\n        var element = document.createElement('style');\r\n        document.head.appendChild(element);\r\n        var sheet = element.sheet;\r\n        var styles = '@font-face { font-family: \"SwisBlack\"; src: url(\"assets/font/SwisBlack.ttf\") format(\"opentype\"); }\\n';\r\n        sheet.insertRule(styles, 0);\r\n    }\r\n\r\n    preload() {\r\n        this.load.script('webfont', 'https://ajax.googleapis.com/ajax/libs/webfont/1.6.26/webfont.js');\r\n        this.load.image(CST.IMAGES.BIG_BUTTON, \"./assets/images/\" + CST.IMAGES.BIG_BUTTON);\r\n        this.load.image(CST.IMAGES.BACK_BUTTON, \"./assets/images/\" + CST.IMAGES.BACK_BUTTON);\r\n    }\r\n\r\n    create() {\r\n        WebFont.load({\r\n            custom: {\r\n                families: ['SwisBlack']\r\n            }\r\n        });\r\n        this.scene.start(CST.SCENE.FIRST_SCENE);\r\n    }\r\n}","export class Extention {\r\n    static buttonClick = function (scene, button, time) {\r\n        var tween = scene.tweens.add({\r\n            targets: button,\r\n            duration: time,\r\n            ease: 'Bounce',\r\n            scaleX: 0.8,\r\n            scaleY: 0.8,\r\n            yoyo: true\r\n        });\r\n        return tween;\r\n    }\r\n}","/** @type {import (\"../../typing/phaser\")} */\r\n/** @type {import (\"../../typing/SpinePlugin\")} */\r\n/** @type {import (\"../../typing/spine\")} */\r\n\r\nimport { CST } from \"../Helper/CST\";\r\nimport { Extention } from '../Helper/Extension';\r\n\r\nexport class FirstScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENE.FIRST_SCENE,\r\n            pack: {\r\n                files: [\r\n                    { type: 'scenePlugin', key: 'SpinePlugin', url: 'SpinePlugin.min.js', sceneKey: 'spine' }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    preload(){\r\n        this.load.spine(\"Boy\", \"./assets/spine/Boy/Boy.json\", [\"./assets/spine/Boy/Boy.atlas\"]);\r\n    }\r\n\r\n    create() {\r\n        this.add.text(this.game.renderer.width / 2 -100, 70, \"First Scene\",\r\n        {\r\n            fontFamily: \"SwisBlack\", fontSize: 38, color: '#fff', shadow: {\r\n                offsetX: 10,\r\n                offsetY: 10,\r\n                color: '#212121',\r\n                blur: 3,\r\n            }\r\n        });\r\n        \r\n        var boy =  this.add.spine(300, 700, \"Boy\", \"idle\", true);\r\n        var skin = boy.skeletonData.findSkin(\"Default\");\r\n        CST.CHARACTER_SKINS.forEach(skinName => {\r\n            let tempSkin = boy.skeletonData.findSkin(skinName);\r\n            skin.addSkin(tempSkin);\r\n        });\r\n        boy.setSkin(skin);\r\n        boy.setSlotsToSetupPose();\r\n\r\n        let bigButton = this.add.image(0, 0, CST.IMAGES.BIG_BUTTON, 0);\r\n        let nextButtonText = this.add.text(-68, -40, \"NEXT\",\r\n            { fontFamily: \"SwisBlack\", fontSize: 60, stroke: '#fff', color: '#000', strokeThickness: 3 });\r\n\r\n        let nextButton = this.add.container(this.game.renderer.width - 155, this.game.renderer.height - 80,\r\n            [bigButton, nextButtonText]).setSize(210, 100);\r\n        nextButton.setInteractive();\r\n        let nextButtonTween = null;\r\n        nextButton.on(\"pointerup\", () => {\r\n            if (nextButtonTween != null) {\r\n                return;\r\n            }\r\n            nextButtonTween = Extention.buttonClick(this, nextButton, 80).on(\"complete\", () => {\r\n                nextButton.setScale(1);\r\n                this.scene.start(CST.SCENE.SECOND_SCENE);\r\n            });\r\n        });\r\n    }\r\n}","/** @type {import (\"../../typing/phaser\")} */\r\nimport { CST } from \"../Helper/CST\";\r\nimport { Extention } from '../Helper/Extension';\r\n\r\nexport class SecondScene extends Phaser.Scene {\r\n    characterInitialPosition = { x: 0, y: 0 };\r\n    toggleInteractable = true;\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENE.SECOND_SCENE,\r\n            pack: {\r\n                files: [\r\n                    { type: 'scenePlugin', key: 'SpinePlugin', url: 'SpinePlugin.min.js', sceneKey: 'spine' }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    create() {\r\n        var boy =  this.add.spine(500, 700, \"Boy\", \"idle\", true);\r\n        var skin = boy.skeletonData.findSkin(\"Default\");\r\n        CST.CHARACTER_SKINS.forEach(skinName => {\r\n            let tempSkin = boy.skeletonData.findSkin(skinName);\r\n            skin.addSkin(tempSkin);\r\n        });\r\n        boy.setSkin(skin);\r\n        boy.setSlotsToSetupPose();\r\n\r\n        let backButton = this.add.image(65, this.game.renderer.height - 40, CST.IMAGES.BACK_BUTTON);\r\n        backButton.setInteractive();\r\n        backButton.on(\"pointerup\", () => {\r\n            Extention.buttonClick(this, backButton, 40).on(\"complete\", () => {\r\n                this.scene.start(CST.SCENE.FIRST_SCENE);\r\n            });\r\n        });\r\n\r\n        this.add.text(this.game.renderer.width / 2 -100, 70, \"Second Scene\",\r\n        {\r\n            fontFamily: \"SwisBlack\", fontSize: 38, color: '#fff', shadow: {\r\n                offsetX: 10,\r\n                offsetY: 10,\r\n                color: '#212121',\r\n                blur: 3,\r\n            }\r\n        });\r\n        \r\n    }\r\n}","/** @type {import(\"../typing/phaser\")} */\r\n\r\nimport { LoadScene } from \"./Scene/LoadScene\";\r\nimport { FirstScene } from \"./Scene/FirstScene\";\r\nimport { SecondScene } from \"./Scene/SecondScene\";\r\n\r\nlet game = new Phaser.Game({\r\n    type: Phaser.AUTO,\r\n    width: 1280,\r\n    height: 720,\r\n    backgroundColor : \"#577eff\",\r\n    parent: 'KansasGame',\r\n    dom: {\r\n        createContainer: true,\r\n    },\r\n    scene : [\r\n        LoadScene,\r\n        FirstScene,\r\n        SecondScene\r\n    ],\r\n    physics:{\r\n        default: \"arcade\",\r\n        arcade: {\r\n            debug : true\r\n        }\r\n    },\r\n    scale : {\r\n        mode : Phaser.Scale.FIT,\r\n        autoCenter : Phaser.Scale.CENTER_BOTH\r\n    }\r\n});"]}